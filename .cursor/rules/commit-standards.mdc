---
alwaysApply: true
description: "Commit message standards and conventions for this project"
---

# Commit Message Standards

This project follows strict commit message conventions based on [COMMIT_GUIDE.md](mdc:COMMIT_GUIDE.md).

## Required Commit Format

All commits MUST follow this exact pattern:
```
<type>: <gitmoji> <description>

<body with bullet points>
```

## Commit Types (16 total)

### Core Types (Most Common)
- `feat` - New features
- `fix` - Bug fixes  
- `docs` - Documentation changes
- `style` - Code formatting
- `refactor` - Code restructuring
- `test` - Testing changes
- `chore` - Build/tool changes

### Extended Types
- `perf` - Performance improvements
- `ci` - CI configuration
- `build` - Build system changes
- `revert` - Revert commits

### Optional Types
- `security` - Security fixes
- `deps` - Dependencies
- `config` - Configuration
- `release` - Releases
- `hotfix` - Critical fixes

## Required Gitmoji Usage

Every commit MUST include appropriate gitmoji emoji. Most common:

- ✨ `:sparkles:` - New features
- 🐛 `:bug:` - Bug fixes
- 📝 `:memo:` - Documentation
- 🔧 `:wrench:` - Configuration
- ♻️ `:recycle:` - Refactoring
- ✅ `:white_check_mark:` - Tests
- 🚀 `:rocket:` - Deployment
- 💄 `:lipstick:` - UI/styling
- ⚡️ `:zap:` - Performance
- 🚑️ `:ambulance:` - Critical fixes

## Commit Examples

**Feature:**
```
feat: ✨ add user authentication system

- Implement JWT token validation
- Add login/logout endpoints
- Create user session management
```

**Bug Fix:**
```
fix: 🐛 resolve login validation error

- Fix email validation regex
- Update error handling for invalid credentials
```

**Documentation:**
```
docs: 📝 update API documentation

- Add authentication endpoints
- Update response examples
- Fix typos in README
```

## Enforcement Rules

1. **ALWAYS** use the exact format: `<type>: <gitmoji> <description>`
2. **NEVER** commit without appropriate gitmoji emoji
3. **ALWAYS** include descriptive body with bullet points for non-trivial changes
4. **ALWAYS** use lowercase for type and description
5. **ALWAYS** use present tense ("add" not "added")
6. **ALWAYS** be concise but descriptive

## Reference

See complete guide: [COMMIT_GUIDE.md](mdc:COMMIT_GUIDE.md)
- 64 total gitmoji emojis available
- 16 conventional commit types
- Detailed examples and usage patterns

When creating commits, always reference this guide to ensure consistency across the project.
