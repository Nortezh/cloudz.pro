# Development Server Port Check Rule

## Port Conflict Prevention

Before starting any frontend development server, always check if localhost:5173 is already in use.

### Required Checks

1. **Port 5173 Status Check**: Run `lsof -i :5173` or `netstat -an | grep :5173` to check if port 5173 is occupied
2. **Process Identification**: If port 5173 is in use, identify what process is using it
3. **Graceful Handling**: Either:
   - Stop the existing process if it's no longer needed
   - Use an alternative port (like 5174) for the new dev server
   - Inform the user about the port conflict

### Implementation Guidelines

When running development commands like:
- `pnpm run dev`
- `npm run dev` 
- `yarn dev`
- `vite dev`
- `react-router dev`

Always perform port checks first to avoid conflicts and ensure smooth development experience.

### Example Commands

```bash
# Check if port 5173 is in use
lsof -i :5173

# Kill process on port 5173 if needed
kill -9 $(lsof -t -i:5173)

# Or let the dev server automatically find next available port
pnpm run dev
```

### Related Files

- [package.json](mdc:package.json) - Contains dev scripts
- [vite.config.ts](mdc:vite.config.ts) - Vite configuration
- [react-router.config.ts](mdc:react-router.config.ts) - React Router configuration

### Port Conflict Resolution

If port 5173 is occupied:
1. Check if it's a legitimate development server that should be running
2. If not needed, terminate the process
3. If needed, allow the new dev server to use the next available port (5174, 5175, etc.)
4. Document which services are running on which ports for team awareness
